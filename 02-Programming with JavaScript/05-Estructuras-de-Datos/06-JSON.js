
// ‚úÖ JSON: JavaScript Object Notation
// Es un formato de texto ligero para almacenar e intercambiar datos.
// Aunque se parece mucho a un objeto de JavaScript, **no es exactamente lo mismo**.

// Ejemplo de texto JSON (lo podr√≠amos recibir desde una API o archivo):
let jsonText = '{"nombre":"Ada","edad":30,"lenguajes":["JavaScript","Python"]}';

// Este texto es un string, no podemos acceder a sus propiedades directamente.
// console.log(jsonText.nombre);  ‚ùå Esto dar√≠a undefined


// üîÑ JSON.parse()
// Convierte un string JSON v√°lido a un **objeto JavaScript real**
let persona = JSON.parse(jsonText);
console.log(persona);          // ‚úÖ Ahora s√≠ es un objeto JS
console.log(persona.nombre);   // "Ada"
console.log(persona.lenguajes[1]); // "Python"


// üîÑ JSON.stringify()
// Hace lo contrario: convierte un **objeto JavaScript** en un **string JSON**
let objetoOriginal = {
    producto: "Libro",
    precio: 12.99,
    disponible: true
};

let textoConvertido = JSON.stringify(objetoOriginal);
console.log(textoConvertido); // '{"producto":"Libro","precio":12.99,"disponible":true}'


// Esto es muy √∫til para:
// - Enviar datos por red (APIs).
// - Guardar datos en localStorage.
// - Escribir archivos en Node.js.


// üß™ Comprobaci√≥n de equivalencia:
let backToObject = JSON.parse(textoConvertido);
console.log(backToObject.producto); // "Libro"


// ‚ùå ¬°Atenci√≥n! JSON.stringify ignora funciones y propiedades no v√°lidas
let objetoConFuncion = {
    saludo: "hola",
    decirHola: function () { console.log("hola"); }
};

console.log(JSON.stringify(objetoConFuncion)); 
// Solo guarda: {"saludo":"hola"} ‚Äî las funciones no existen en JSON


// ‚ùå M√©todos incorrectos: JSON.fromString y JSON.toString
// NO existen los m√©todos `JSON.fromString` ni `JSON.toString`
// Si los ves, es un error o una confusi√≥n con otros lenguajes como Python.

// Lo correcto en JavaScript ES:
// - JSON.parse()    ‚Üê convierte texto ‚Üí objeto
// - JSON.stringify() ‚Üê convierte objeto ‚Üí texto


// ‚úÖ Recuerda:
// JSON      = formato de texto (parecido a objetos, pero m√°s limitado)
// Objeto JS = estructura con m√°s poder (m√©todos, l√≥gica, etc.)

// Por eso usamos estos m√©todos cuando pasamos entre ellos:
// String JSON   ‚áÑ   Objeto JavaScript
//       ‚Üë             ‚Üë
//  JSON.parse()   JSON.stringify()
